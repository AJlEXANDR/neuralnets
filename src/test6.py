"""
DO NOT EDIT THIS FILE!!!
"""
import unittest

import boto3
import dotenv
import tensorflow as tf
PATH_TO_MODEL = 'models/model_6'


class TestAccuracyDemo(unittest.TestCase):
    def testCategoricalAccuracy(self):
        m = tf.keras.metrics.CategoricalAccuracy()
        y_true = tf.convert_to_tensor([[0, 0, 1], [0, 1, 0]])
        y_pred = tf.convert_to_tensor([[0.1, 0.9, 0.8], [0.05, 0.95, 0]])
        m.update_state(y_true, y_pred)
        res = m.result().numpy()
        self.assertEqual(res, 0.5)


class TestModelLocal(unittest.TestCase):
    def test_model(self):
        model = tf.keras.models.load_model(PATH_TO_MODEL)
        X = tf.ones((1, 180, 180, 3))
        y = model(X)
        self.assertIsInstance(y, tf.Tensor)


class TestModelS3(unittest.TestCase):
    def test_model_s3(self):
        config = dotenv.dotenv_values('.env')

        ACCESS_KEY = config['ACCESS_KEY']
        SECRET_KEY = config['SECRET_KEY']

        client = boto3.client(
            's3',
            endpoint_url='https://storage.yandexcloud.net',
            aws_access_key_id=ACCESS_KEY,
            aws_secret_access_key=SECRET_KEY
        )

        client.download_file('neuralnets2023',
                             'labintsev/model_6.zip',
                             'models/model_6s.zip')
        model = tf.keras.models.load_model('models/model_6s.zip')
        test_ds = tf.keras.utils.image_dataset_from_directory(
            os.path.join(PATH_TO_DATA, "PetImages"),
            validation_split=0.2,
            subset="val",
            seed=1337,
            image_size=image_size,
            batch_size=batch_size,
        )
        score = model.evaluate(test_ds)
        self.assertGreater(score, 0.8)


if __name__ == '__main__':
    unittest.main()
